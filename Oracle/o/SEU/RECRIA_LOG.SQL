SET SERVEROUTPUT ON SIZE 50000

DECLARE

STR VARCHAR2(4000);
COL_ID NUMBER;

CURSOR C1 IS SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER='SEU' AND TABLE_NAME NOT LIKE '%LOG%' 
																								AND TABLE_NAME LIKE 'SEU%' AND TABLE_NAME NOT LIKE '%TMP%' 
																								AND TABLE_NAME NOT LIKE '%BKP%'
																								AND TABLE_NAME NOT LIKE '%TESTE%';
																								

CURSOR C2(TABELA IN VARCHAR2) IS SELECT COLUMN_ID,COLUMN_NAME, DATA_TYPE, DATA_LENGTH FROM DBA_TAB_COLUMNS 
																 WHERE TABLE_NAME=TABELA AND DATA_TYPE<>'BLOB' AND COLUMN_NAME NOT LIKE '%NREG%' 
																 AND COLUMN_NAME NOT LIKE '%IDUSUARIO%' AND OWNER='SEU' ORDER BY COLUMN_ID ;

--TABELA VARCHAR2(100);

BEGIN

	FOR RC1 IN C1 LOOP
	  --TABELA := RC1.TABLE_NAME;
	  BEGIN
	    STR := 'ALTER TABLE SEU.'||RC1.TABLE_NAME||'_LOG RENAME TO '||RC1.TABLE_NAME||'_LOG_OLD';
	  	EXECUTE IMMEDIATE STR;
	  	STR := 'DROP TRIGGER SEU.TRG_'||RC1.TABLE_NAME||'_AUDIT_T';
	  	EXECUTE IMMEDIATE STR;
	  EXCEPTION WHEN OTHERS THEN
	  	DBMS_OUTPUT.PUT_LINE(sqlerrm);
	  END;
	  SELECT MIN(COLUMN_ID) INTO COL_ID FROM DBA_TAB_COLUMNS WHERE TABLE_NAME=RC1.TABLE_NAME AND OWNER='SEU'
	  																												AND COLUMN_NAME NOT LIKE '%NREG%' 
	  																												AND COLUMN_NAME NOT LIKE '%IDUSUARIO%'  ;
		STR := 'CREATE TABLE SEU.'||RC1.TABLE_NAME||'_LOG ('||chr(10);
		STR := STR||' S'||SUBSTR(RC1.TABLE_NAME,4,3)||'_NREG INTEGER, OPERACAO CHAR(1), DATA_HORA DATE, IDUSUARIO VARCHAR2(128), ORIGEM VARCHAR2(255)'||chr(10);
		FOR RC2 IN C2(RC1.TABLE_NAME) LOOP
			IF RC2.DATA_TYPE='VARCHAR2' OR RC2.DATA_TYPE='CHAR' THEN
				STR := STR||','||RC2.COLUMN_NAME||'_ANTES '||RC2.DATA_TYPE||'('||RC2.DATA_LENGTH||'), '||chr(10)||
				       RC2.COLUMN_NAME||'_DEPOIS '||RC2.DATA_TYPE||'('||RC2.DATA_LENGTH||')'||chr(10);
			ELSE
				STR := STR||','||RC2.COLUMN_NAME||'_ANTES '||RC2.DATA_TYPE||','||chr(10)||
				       RC2.COLUMN_NAME||'_DEPOIS '||RC2.DATA_TYPE||chr(10);
			END IF;
		END LOOP;
		STR := STR||') TABLESPACE SEULOG';
		BEGIN
			EXECUTE IMMEDIATE STR;
			--DBMS_OUTPUT.PUT_LINE(STR);
		EXCEPTION WHEN OTHERS THEN
			DBMS_OUTPUT.PUT_LINE('Erro na tabela '||rc1.table_name||' '||SQLERRM);
		END;
	END LOOP;
END;
/

DECLARE

STR VARCHAR2(4000);
COL_ID NUMBER;

CURSOR C1 IS SELECT TABLE_NAME FROM DBA_TABLES WHERE OWNER='SEU' AND TABLE_NAME NOT LIKE '%LOG%' 
																								AND TABLE_NAME LIKE 'SEU%' AND TABLE_NAME NOT LIKE '%TMP%'
																								AND TABLE_NAME NOT LIKE '%BKP%' 
																								AND TABLE_NAME NOT LIKE '%TESTE%';
																								

CURSOR C2(TABELA IN VARCHAR2) IS SELECT COLUMN_ID,COLUMN_NAME, DATA_TYPE FROM DBA_TAB_COLUMNS
																	WHERE OWNER='SEU' 
																	AND TABLE_NAME=TABELA 
																	AND DATA_TYPE<>'BLOB' 
																	AND COLUMN_NAME NOT LIKE '%NREG%' 
																  AND COLUMN_NAME NOT LIKE '%IDUSUARIO%' 
																  ORDER BY COLUMN_ID;

BEGIN
	
	FOR RC1 IN C1 LOOP
		STR := 'CREATE OR REPLACE TRIGGER SEU.TRG_'||RC1.TABLE_NAME||'_AUDIT_T BEFORE'||CHR(10)
					 ||'INSERT OR UPDATE OR DELETE ON SEU.'||RC1.TABLE_NAME||' REFERENCING OLD AS OLD NEW AS NEW FOR EACH ROW '||CHR(10)
					 ||'DECLARE'||CHR(10)
					 ||'TIPO CHAR(1);'||CHR(10)
					 ||'NREG INTEGER;'||CHR(10)
					 ||'BEGIN'||CHR(10)
					 ||'IF INSERTING THEN'||CHR(10)
					 ||'   TIPO := '||''''||'I'||''''||';'||CHR(10)
					 ||'   NREG := :NEW.S'||SUBSTR(RC1.TABLE_NAME,4,3)||'_NREG;'||CHR(10)
					 ||'END IF;'||CHR(10)
					 ||'IF UPDATING THEN'||CHR(10)
					 ||'   TIPO := '||''''||'U'||''''||';'||CHR(10)
					 ||'   NREG := :OLD.S'||SUBSTR(RC1.TABLE_NAME,4,3)||'_NREG;'||CHR(10)
					 ||'END IF;'||CHR(10)
					 ||'IF DELETING THEN'||CHR(10)
					 ||'   TIPO := '||''''||'D'||''''||';'||CHR(10)
					 ||'   NREG := :OLD.S'||SUBSTR(RC1.TABLE_NAME,4,3)||'_NREG;'||CHR(10)
					 ||'END IF;'||CHR(10)
					 ||'INSERT INTO '||RC1.TABLE_NAME||'_LOG VALUES ('||CHR(10);
		STR := STR||'NREG, TIPO, SYSDATE, NVL(SYS_CONTEXT('||''''||'ctx_idusuario'||''''||','||''''||'idusuario'||''''||'),'||
		      'SYS_CONTEXT('||''''||'USERENV'||''''||','||''''||'SESSION_USER'||''''||')),'||CHR(10)||
		      'NVL(SYS_CONTEXT('||''''||'ctx_idusuario'||''''||','||''''||'origem'||''''||'),'||
		      'SYS_CONTEXT('||''''||'USERENV'||''''||','||''''||'TERMINAL'||''''||'))'||CHR(10);
		FOR RC2 IN C2(RC1.TABLE_NAME) LOOP
			STR := STR||', :OLD.'||RC2.COLUMN_NAME||', :NEW.'||RC2.COLUMN_NAME||CHR(10);
		END LOOP;
		STR := STR||');'||CHR(10);
		STR := STR||'END;';
		BEGIN
	  	EXECUTE IMMEDIATE STR;
	  	--DBMS_OUTPUT.PUT_LINE(STR);
	  EXCEPTION WHEN OTHERS THEN
	  	DBMS_OUTPUT.PUT_LINE('Erro ao criar trigger de log da tabela '||rc1.table_name||' '||SQLERRM);
	  END;
	END LOOP;
END;
/