CREATE OR REPLACE TRIGGER LOG_LOGON
AFTER LOGON ON DATABASE
WHEN (USER='SYS' OR USER LIKE 'OPS$%')
BEGIN

  INSERT INTO SYS.EVENT_LOG( .........)  ;

  COMMIT;

END;
/


ALTER TRIGGER TRA_INTER_SAP_CLIEN DISABLE
/

ALTER TRIGGER TRA_INTER_SAP_CLIEN ENABLE
/



CREATE OR REPLACE TRIGGER TRA_INTER_SAP_CLIEN AFTER INSERT OR
                                                    UPDATE OR
                                                    DELETE ON ZVPKNA1 FOR EACH ROW
/*
  NOME..... : TRA_INTER_SAP_CLIEN
  MODULO... : INT
  DATA..... : 26/08/1999
  AUTOR.... : JOSIVAN
  OBJETIVO. : TRIGGER PARA ACTUALIZAR ON-LINE AS TABELAS:
              CLIENTE
              NIVEL_FACTU_CLIEN
              MASCA_CARTA
              SUB_CONTA
              DESCO_COMBU_CLIEN_SUB_CONTA
              COMIS_DESCO_SERVI_CLIEN_SUB_CO
              MORADA
              CONTACTO
  PARAMETROS:
  OBSERVACAO:
*/
DECLARE

  E_SP_ERRO     EXCEPTION;
  V_COD_ERRO    VARCHAR2(255) := NULL;

  V_TAB_DADOS   ZVPKNA1%ROWTYPE;

BEGIN

  DBMS_OUTPUT.PUT_LINE('INICIO DA TRIGGER');

  V_TAB_DADOS.ZZIDT_C        := :NEW.ZZIDT_C;
  V_TAB_DADOS.CLIENTE        := :NEW.CLIENTE;
  V_TAB_DADOS.LE             := :NEW.LE;
  V_TAB_DADOS.ZZDATUM        := :NEW.ZZDATUM;
  V_TAB_DADOS.NAME2          := :NEW.NAME2;
  V_TAB_DADOS.NAME1          := :NEW.NAME1;
  V_TAB_DADOS.STCEG          := :NEW.STCEG;
  V_TAB_DADOS.ZZSTAT         := :NEW.ZZSTAT;
  V_TAB_DADOS.BRAN1          := :NEW.BRAN1;
  V_TAB_DADOS.VKORG          := :NEW.VKORG;
  V_TAB_DADOS.VTWEG          := :NEW.VTWEG;
  V_TAB_DADOS.SPART          := :NEW.SPART;
  V_TAB_DADOS.VKBUR          := :NEW.VKBUR;
  V_TAB_DADOS.VKGRP          := :NEW.VKGRP;
  V_TAB_DADOS.STRAS          := :NEW.STRAS;
  V_TAB_DADOS.ORT01          := :NEW.ORT01;
  V_TAB_DADOS.PSTLZ          := :NEW.PSTLZ;
  V_TAB_DADOS.LZONE          := :NEW.LZONE;
  V_TAB_DADOS.LAND1          := :NEW.LAND1;
  V_TAB_DADOS.TELF1          := :NEW.TELF1;
  V_TAB_DADOS.TELF2          := :NEW.TELF2;
  V_TAB_DADOS.TELFX          := :NEW.TELFX;
  V_TAB_DADOS.TELTX          := :NEW.TELTX;
  V_TAB_DADOS.ZZSTRAS        := :NEW.ZZSTRAS;
  V_TAB_DADOS.ZZORT01        := :NEW.ZZORT01;
  V_TAB_DADOS.ZZPSTLZ        := :NEW.ZZPSTLZ;
  V_TAB_DADOS.ZZLAND1        := :NEW.ZZLAND1;
  V_TAB_DADOS.ZZTELF1        := :NEW.ZZTELF1;
  V_TAB_DADOS.ZZTELF2        := :NEW.ZZTELF2;
  V_TAB_DADOS.ZZTELFX        := :NEW.ZZTELFX;
  V_TAB_DADOS.ZZTELTX        := :NEW.ZZTELTX;
  V_TAB_DADOS.KUKLA          := :NEW.KUKLA;

  IF INSERTING THEN

     DBMS_OUTPUT.PUT_LINE( 'NOME DO CLIENTE: '||V_TAB_DADOS.NAME2 );

     SP_INTER_SAP_CLIEN( V_TAB_DADOS, 1, V_COD_ERRO );

  ELSIF UPDATING THEN

     SP_INTER_SAP_CLIEN( V_TAB_DADOS, 2, V_COD_ERRO );

  ELSIF DELETING THEN

     SP_INTER_SAP_CLIEN( V_TAB_DADOS, 3, V_COD_ERRO );

  END IF;

  IF V_COD_ERRO IS NOT NULL THEN
     RAISE E_SP_ERRO;
  END IF;

EXCEPTION
  WHEN E_SP_ERRO THEN
    RAISE_APPLICATION_ERROR(-20101,'ERRO AO EXECUTAR SP '|| V_COD_ERRO);
  WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR(-20102,'NAO ACTUALIZOU GALP ' || SQLERRM);

END TRA_INTER_SAP_CLIEN;
/
SHOW ERRORS;
