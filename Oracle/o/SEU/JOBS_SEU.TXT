create table SEU.JOB_CTRL
(ID NUMBER
,CMD VARCHAR2(4000)
,PRI NUMBER
,STATUS VARCHAR2(1)
,DTINI DATE
,DTFIM DATE
,ERRO VARCHAR2(4000))
TABLESPACE SEUD
/

create table SEU.JOB_LOG
(ID NUMBER
,CMD VARCHAR2(4000)
,PRI NUMBER
,STATUS VARCHAR2(1)
,DTINI DATE
,DTFIM DATE
,ERRO VARCHAR2(4000))
TABLESPACE SEUD
/

CREATE SEQUENCE SEU.SEQ_JOB_CTRL_INSERT START WITH 1 INCREMENT BY 1 MAXVALUE 999999999 MINVALUE 0 NOCACHE NOCYCLE;

CREATE OR REPLACE TRIGGER SEU.TRG_JOB_CTRL_INCR_I 
BEFORE INSERT ON SEU.JOB_CTRL REFERENCES OLD AS OLD NEW AS NEW
FOR EACH ROW
BEGIN
	SELECT SEQ_JOB_CTRL_INSERT.NEXTVAL INTO :NEW.ID FROM DUAL;
	:NEW.STATUS:='F';
END;
/


CREATE OR REPLACE PROCEDURE SEU.P_EXEC_JOB (PPRI IN NUMBER)
IS

	TYPE V_LISTA IS TABLE OF NUMBER INDEX BY BINARY_INTEGER;
	LISTA V_LISTA;
	STR VARCHAR2(4000);
	POS NUMBER := 1;
	ERRORMSG VARCHAR2(4000);
	JOB_ID NUMBER;

BEGIN
			SELECT ID INTO JOB_ID FROM  SEU.JOB_CTRL WHERE ID = (SELECT MIN(ID) FROM SEU.JOB_CTRL WHERE PRI=1 AND STATUS='F' GROUP BY PRI)
			FOR UPDATE NOWAIT;
			BEGIN
				UPDATE JOB_CTRL SET STATUS='A', DTINI=SYSDATE, DTFIM=NULL, ERRO=NULL WHERE ID = JOB_ID;
				COMMIT;
				SELECT CMD INTO STR FROM JOB_CTRL WHERE ID = JOB_ID;
				EXECUTE IMMEDIATE 'BEGIN '||STR||'; END;';
				INSERT INTO JOB_LOG SELECT ID,CMD,PRI,'T',DTINI,SYSDATE,NULL FROM JOB_CTRL WHERE ID = JOB_ID;
				DELETE JOB_CTRL WHERE ID = JOB_ID;
				COMMIT;
			EXCEPTION WHEN OTHERS THEN
			  ERRORMSG := SQLERRM;
				UPDATE JOB_CTRL SET STATUS='E',DTFIM=SYSDATE,ERRO=ERRORMSG WHERE ID = JOB_ID;
				INSERT INTO JOB_LOG SELECT * FROM JOB_CTRL WHERE ID = JOB_ID;
				COMMIT;
			END;
EXCEPTION WHEN OTHERS THEN NULL;
END;
/
